package com.java;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Function;
import java.util.stream.Collectors;

public class DuplicateList {

	public static void main(String[] args) {
		List<Integer> numbers = Arrays.asList(1, 2, 2, 3, 4, 4, 5, 6, 6, 6);

		List<Integer> duplicates = numbers.stream()
				.collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).entrySet().stream()
				.filter(e -> e.getValue() > 1) // Only values with count > 1 are duplicates
				.map(Map.Entry::getKey).collect(Collectors.toList());
		
		 Set<Integer> seen = new HashSet<>();

	        List<Integer> duplicates_2 = numbers.stream()
	                .filter(n -> !seen.add(n)) // if add() returns false â†’ duplicate
	                .collect(Collectors.toSet()) // to avoid repeated duplicates
	                .stream()
	                .collect(Collectors.toList());

		System.out.println("Duplicates: " + duplicates);

	}

}
